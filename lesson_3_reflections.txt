When would you want to use a remote repository rather than keeping all your work
local?

    When a want to collaborate with other people on a project. Other reason will be that I want to to make commits from different computers
    
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because if I'll setup automatically, I may don't know when my local work has changed. If I'm working in my local repository, the pull command will merge the remote files into my local files without my consent, and it would lead to origin bugs or change incomplete code or functions.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches are for making experimental, new features or bug fixes in a local work before to upshot to the remote.
    Forks are for cloning a repository avoiding to clone it to your local computer, so saves time and you get the reference to the remote branch.
    Clone are mean to copy someone's code to make changes or cloning your own code to another place in your computer.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    The benefit is that you can know the state and merge files with criteria, and resolve conflicts without hesitation.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Using another version-control protocol, like SVN, it would be easier to commit, avoiding the time staging files, but I'd have less control of my files making difficult and lead to delete code making not recoverable. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
